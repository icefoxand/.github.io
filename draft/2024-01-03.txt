issue type

- 작업(task): 스토리와의 차이... 스토리와 달리 유저의 직접적 사용과 무관한 좀더 뒷쪽에 이뤄지는 작은 작업
- 스토리(story): 태스크와의 차이.. 태스크와 달리 유저의 직접적 사용과 관련한 좀더 end-point 쪽의 작은 작업
- 버그(bug): 버그
- 에픽(epic): 하나의 큰 틀. 스토리들의 묶음.

- component는 백엔/프엔 처럼 나누어도 됨. UX/infra 등등.....

- 스프린트 란? scrum 구조에서 작은 한 횟수
(- 칸반과 대비되는 내용)

SRE 란?
- SRE는 Site Reliability Engineering의 약자로, Google에 의해 개발된 소프트웨어 엔지니어링의 한 분야입니다. SRE는 주로 대규모 시스템의 신뢰성, 가용성, 성능, 효율성을 지속적으로 개선하기 위한 방법론과 기술을 다룹니다. 이는 기존의 IT 운영 팀과 소프트웨어 개발 팀 사이의 간극을 메우는 역할을 하며, 일련의 엔지니어링 접근 방식으로 시스템을 관리합니다.

SRE를 사용하는 이유는 다음과 같습니다:

1. **신뢰성 보장**: 시스템의 신뢰성을 측정하고 보장하기 위해 서비스 수준 목표(SLO)와 서비스 수준 지표(SLI)를 설정합니다.
2. **자동화**: 반복적인 작업과 시스템 관리를 자동화하여, 더 중요한 작업에 엔지니어가 집중할 수 있도록 합니다.
3. **고장 관리**: 시스템의 고장을 예방하고, 발생시 빠르게 복구하여 사용자에게 최소한의 영향을 주도록 합니다.
4. **균형 잡힌 릴리즈와 안정성**: 빠른 소프트웨어 릴리즈와 높은 시스템 안정성 사이의 균형을 맞춥니다.

기업이나 조직은 SRE를 통해 더욱 안정적이고 효율적인 서비스를 제공할 수 있으며, 이를 통해 고객 만족도를 높이고 비즈니스의 성장을 도모할 수 있습니다. SRE는 기술적 문제 해결뿐만 아니라 조직 문화와 작업 방식에도 영향을 미치는 포괄적인 접근 방식을 제공합니다.

오늘 한 일.
- JIRA 사용법을 배웠음
- 알고 list(내코테) 5문제 풀었음
- m spring DI 파일을 학습함(~26p)
